#include "maps/map_a2.qc"
#include "maps/map_aerowalk.qc"
#include "maps/map_agenda.qc"
#include "maps/map_agent.qc"
#include "maps/map_aggressr.qc"
#include "maps/map_airar.qc"
#include "maps/map_alcyone.qc"
#include "maps/map_alk08dm.qc"
#include "maps/map_amphi.qc"
#include "maps/map_amphi2.qc"
#include "maps/map_androm9.qc"
#include "maps/map_argonaut.qc"
#include "maps/map_auhdm1.qc"
#include "maps/map_auhdm2.qc"
#include "maps/map_b256.qc"
#include "maps/map_b2s.qc"
#include "maps/map_badwalk.qc"
#include "maps/map_baldm2.qc"
#include "maps/map_baldm3.qc"
#include "maps/map_baldm4.qc"
#include "maps/map_baldm5.qc"
#include "maps/map_baldm6.qc"
#include "maps/map_baldm7.qc"
#include "maps/map_baldm8.qc"
#include "maps/map_battle.qc"
#include "maps/map_bless.qc"
#include "maps/map_blessed.qc"
#include "maps/map_blizz2.qc"
#include "maps/map_bovine.qc"
#include "maps/map_br11m.qc"
#include "maps/map_br13m.qc"
#include "maps/map_br18m.qc"
#include "maps/map_br20m.qc"
#include "maps/map_br21m.qc"
#include "maps/map_br21ma.qc"
#include "maps/map_bsdm6.qc"
#include "maps/map_bsdm7.qc"
#include "maps/map_bsdm8.qc"
#include "maps/map_bsp.qc"
#include "maps/map_carddm2.qc"
#include "maps/map_cathexis_vis.qc"
#include "maps/map_cbadm1.qc"
#include "maps/map_cbadm2.qc"
#include "maps/map_cbadm2v2.qc"
#include "maps/map_cbadm3.qc"
#include "maps/map_chesdm1.qc"
#include "maps/map_cleaver.qc"
#include "maps/map_cmt1b.qc"
#include "maps/map_cmt3.qc"
#include "maps/map_cmt4.qc"
#include "maps/map_cmt5b.qc"
#include "maps/map_condemn.qc"
#include "maps/map_cpm1qw.qc"
#include "maps/map_cpm3qw.qc"
#include "maps/map_crdm2.qc"
#include "maps/map_dakdm1.qc"
#include "maps/map_dakdm2.qc"
#include "maps/map_damaul7.qc"
#include "maps/map_dapak1.qc"
#include "maps/map_dapak10.qc"
#include "maps/map_dapak11.qc"
#include "maps/map_dapak12.qc"
#include "maps/map_dapak2.qc"
#include "maps/map_dapak3.qc"
#include "maps/map_dapak4.qc"
#include "maps/map_dapak5.qc"
#include "maps/map_dapak6.qc"
#include "maps/map_dapak7.qc"
#include "maps/map_dapak9.qc"
#include "maps/map_darkthree.qc"
#include "maps/map_dead.qc"
#include "maps/map_debello.qc"
#include "maps/map_del1.qc"
#include "maps/map_dm1.qc"
#include "maps/map_dm1a.qc"
#include "maps/map_dm2dmm4.qc"
#include "maps/map_dm3.qc"
#include "maps/map_dm3hill.qc"
#include "maps/map_dm3ish.qc"
#include "maps/map_dm4.qc"
#include "maps/map_dm4ish.qc"
#include "maps/map_dm5.qc"
#include "maps/map_dm5a.qc"
#include "maps/map_dm6.qc"
#include "maps/map_dm6dmm4.qc"
#include "maps/map_dm6quad.qc"
#include "maps/map_dm7.qc"
#include "maps/map_dm99a.qc"
#include "maps/map_dmfdm2.qc"
#include "maps/map_dmm4_1.qc"
#include "maps/map_dmm4_3.qc"
#include "maps/map_dp6.qc"
#include "maps/map_dranzdm6.qc"
#include "maps/map_dranzdm7.qc"
#include "maps/map_dranzdm8.qc"
#include "maps/map_dsn.qc"
#include "maps/map_duel1.qc"
#include "maps/map_e1m1.qc"
#include "maps/map_e1m2.qc"
#include "maps/map_e1m3.qc"
#include "maps/map_e1m5.qc"
#include "maps/map_e1m5duel.qc"
#include "maps/map_e1m6.qc"
#include "maps/map_e1m7.qc"
#include "maps/map_e2m1.qc"
#include "maps/map_e2m2.qc"
#include "maps/map_e2m2tdm.qc"
#include "maps/map_e2m5.qc"
#include "maps/map_e3m2.qc"
#include "maps/map_e3m7tdm.qc"
#include "maps/map_edc.qc"
#include "maps/map_efdm1.qc"
#include "maps/map_efdm10.qc"
#include "maps/map_efdm11.qc"
#include "maps/map_efdm12.qc"
#include "maps/map_efdm13.qc"
#include "maps/map_efdm2.qc"
#include "maps/map_efdm3.qc"
#include "maps/map_efdm4.qc"
#include "maps/map_efdm5.qc"
#include "maps/map_efdm6.qc"
#include "maps/map_efdm7.qc"
#include "maps/map_efdm8.qc"
#include "maps/map_efdm9.qc"
#include "maps/map_effigy.qc"
#include "maps/map_egyptele.qc"
#include "maps/map_elbow.qc"
#include "maps/map_end.qc"
#include "maps/map_enraged.qc"
#include "maps/map_eodm3.qc"
#include "maps/map_evdm1.qc"
#include "maps/map_exdm2.qc"
#include "maps/map_exdm3.qc"
#include "maps/map_exdm4.qc"
#include "maps/map_fbdm2.qc"
#include "maps/map_fbe3m7.qc"
#include "maps/map_ferrum.qc"
#include "maps/map_filthy.qc"
#include "maps/map_fmc.qc"
#include "maps/map_four.qc"
#include "maps/map_frag.qc"
#include "maps/map_fragtwn1.qc"
#include "maps/map_fribdev1.qc"
#include "maps/map_fribweb1.qc"
#include "maps/map_frobodm1.qc"
#include "maps/map_frobodm2.qc"
#include "maps/map_frobodm5.qc"
#include "maps/map_frontier.qc"
#include "maps/map_gencldm6.qc"
#include "maps/map_gendm2.qc"
#include "maps/map_genocide.qc"
#include "maps/map_geodm1.qc"
#include "maps/map_gomdm2.qc"
#include "maps/map_gomdm2v2.qc"
#include "maps/map_gomdm3.qc"
#include "maps/map_gomdm4.qc"
#include "maps/map_gomdm5.qc"
#include "maps/map_gomdm6.qc"
#include "maps/map_grim.qc"
#include "maps/map_hate.qc"
#include "maps/map_hill20.qc"
#include "maps/map_icearena.qc"
#include "maps/map_id3.qc"
#include "maps/map_ikdm9q1.qc"
#include "maps/map_imp1dm5.qc"
#include "maps/map_imp1dm6.qc"
#include "maps/map_impdm2.qc"
#include "maps/map_impdm3.qc"
#include "maps/map_inerb18b.qc"
#include "maps/map_infect.qc"
#include "maps/map_insomnia.qc"
#include "maps/map_jadm1.qc"
#include "maps/map_jndm6.qc"
#include "maps/map_jrdm1.qc"
#include "maps/map_jrdm2.qc"
#include "maps/map_jvoxdm2.qc"
#include "maps/map_jvx1.qc"
#include "maps/map_kdmw.qc"
#include "maps/map_kikdm3.qc"
#include "maps/map_kikdm6.qc"
#include "maps/map_kingdom.qc"
#include "maps/map_kjdm12.qc"
#include "maps/map_kjdm13.qc"
#include "maps/map_klzinsanity.qc"
#include "maps/map_klzvob.qc"
#include "maps/map_kz1on1a.qc"
#include "maps/map_lacrima.qc"
#include "maps/map_lady.qc"
#include "maps/map_leaks.qc"
#include "maps/map_lilith.qc"
#include "maps/map_lock.qc"
#include "maps/map_magus.qc"
#include "maps/map_maricsq1_1.qc"
#include "maps/map_maricsq1_2.qc"
#include "maps/map_matdm1.qc"
#include "maps/map_matdm2.qc"
#include "maps/map_mayhem.qc"
#include "maps/map_messy.qc"
#include "maps/map_midair3.qc"
#include "maps/map_mine.qc"
#include "maps/map_misdm10.qc"
#include "maps/map_misdm11a.qc"
#include "maps/map_misdm12.qc"
#include "maps/map_misdm13.qc"
#include "maps/map_misdm6.qc"
#include "maps/map_misdm8.qc"
#include "maps/map_misdm9.qc"
#include "maps/map_mjdm1pro.qc"
#include "maps/map_muny16.qc"
#include "maps/map_naked3.qc"
#include "maps/map_naked4.qc"
#include "maps/map_naked5.qc"
#include "maps/map_naked6.qc"
#include "maps/map_naked7b2.qc"
#include "maps/map_nduel.qc"
#include "maps/map_nindm2.qc"
#include "maps/map_nindm3.qc"
#include "maps/map_nindm3v2.qc"
#include "maps/map_njx9dm.qc"
#include "maps/map_noentry.qc"
#include "maps/map_odd1.qc"
#include "maps/map_odd2.qc"
#include "maps/map_oktest1.qc"
#include "maps/map_oldcrat.qc"
#include "maps/map_oldcrat2.qc"
#include "maps/map_oma.qc"
#include "maps/map_omf.qc"
#include "maps/map_opposit.qc"
#include "maps/map_outpost.qc"
#include "maps/map_p3a.qc"
#include "maps/map_pbrdm2.qc"
#include "maps/map_pen2.qc"
#include "maps/map_pidmm5.qc"
#include "maps/map_pinion1.qc"
#include "maps/map_pinion2.qc"
#include "maps/map_pinion3.qc"
#include "maps/map_pipeline.qc"
#include "maps/map_pkeg1.qc"
#include "maps/map_pkeg2.qc"
#include "maps/map_pldm1ex.qc"
#include "maps/map_pli.qc"
#include "maps/map_plpak1.qc"
#include "maps/map_plpak10.qc"
#include "maps/map_plpak11.qc"
#include "maps/map_plpak12.qc"
#include "maps/map_plpak2.qc"
#include "maps/map_plpak3.qc"
#include "maps/map_plpak4.qc"
#include "maps/map_plpak5.qc"
#include "maps/map_plpak6.qc"
#include "maps/map_plpak7.qc"
#include "maps/map_plpak8.qc"
#include "maps/map_plpak9.qc"
#include "maps/map_pope2.qc"
#include "maps/map_pope3.qc"
#include "maps/map_pope4.qc"
#include "maps/map_pope6.qc"
#include "maps/map_povdmm4.qc"
#include "maps/map_primedm.qc"
#include "maps/map_prodm4.qc"
#include "maps/map_pushdmm4.qc"
#include "maps/map_q1_q2dm1.qc"
#include "maps/map_q1arena.qc"
#include "maps/map_q1arenax.qc"
#include "maps/map_q1base1.qc"
#include "maps/map_q1edge.qc"
#include "maps/map_q1tm_speedy.qc"
#include "maps/map_q2dm7.qc"
#include "maps/map_q3dm6qw.qc"
#include "maps/map_qffldm5.qc"
#include "maps/map_qtdm1.qc"
#include "maps/map_qtourney2.qc"
#include "maps/map_quadrock.qc"
#include "maps/map_ranbase.qc"
#include "maps/map_rapture1.qc"
#include "maps/map_rapture2.qc"
#include "maps/map_rarena3.qc"
#include "maps/map_ravage.qc"
#include "maps/map_ravage2.qc"
#include "maps/map_razzi.qc"
#include "maps/map_rev68.qc"
#include "maps/map_rf2.qc"
#include "maps/map_rgarden.qc"
#include "maps/map_rip.qc"
#include "maps/map_ritual.qc"
#include "maps/map_rpdm10.qc"
#include "maps/map_rpgdm1.qc"
#include "maps/map_rtldm3.qc"
#include "maps/map_ruins.qc"
#include "maps/map_rwild.qc"
#include "maps/map_safe1.qc"
#include "maps/map_safe2.qc"
#include "maps/map_sanity.qc"
#include "maps/map_santzue.qc"
#include "maps/map_scampdm5.qc"
#include "maps/map_schloss.qc"
#include "maps/map_shadows.qc"
#include "maps/map_shadowsb7.qc"
#include "maps/map_shady.qc"
#include "maps/map_shake.qc"
#include "maps/map_shine.qc"
#include "maps/map_shroud.qc"
#include "maps/map_shroud2.qc"
#include "maps/map_silence.qc"
#include "maps/map_skull.qc"
#include "maps/map_skywalk.qc"
#include "maps/map_slip.qc"
#include "maps/map_sm.qc"
#include "maps/map_sm30_ray.qc"
#include "maps/map_spank1.qc"
#include "maps/map_spd.qc"
#include "maps/map_spear.qc"
#include "maps/map_spine.qc"
#include "maps/map_spinev2.qc"
#include "maps/map_start.qc"
#include "maps/map_strafin1.qc"
#include "maps/map_strafin2.qc"
#include "maps/map_strafin3.qc"
#include "maps/map_strafin4.qc"
#include "maps/map_strafin5.qc"
#include "maps/map_strafin6.qc"
#include "maps/map_strmland.qc"
#include "maps/map_sudden.qc"
#include "maps/map_summer.qc"
#include "maps/map_swtdie.qc"
#include "maps/map_tbase.qc"
#include "maps/map_tearena.qc"
#include "maps/map_teritory.qc"
#include "maps/map_theend.qc"
#include "maps/map_thf.qc"
#include "maps/map_timeless.qc"
#include "maps/map_titan2.qc"
#include "maps/map_trallefinal.qc"
#include "maps/map_trdmm4.qc"
#include "maps/map_trindm1.qc"
#include "maps/map_trindm2.qc"
#include "maps/map_trindm3.qc"
#include "maps/map_trondm1.qc"
#include "maps/map_trondm2.qc"
#include "maps/map_tsd.qc"
#include "maps/map_tumour2.qc"
#include "maps/map_uarena1.qc"
#include "maps/map_ukcldm2.qc"
#include "maps/map_ukcldm6.qc"
#include "maps/map_ukooldm2.qc"
#include "maps/map_ukooldm3.qc"
#include "maps/map_ukooldm4.qc"
#include "maps/map_ukooldm6.qc"
#include "maps/map_ukooldm8.qc"
#include "maps/map_ukpak1.qc"
#include "maps/map_ukpak2.qc"
#include "maps/map_ukpak5.qc"
#include "maps/map_ukpak6.qc"
#include "maps/map_ukpak8.qc"
#include "maps/map_ultrav.qc"
#include "maps/map_unddm1.qc"
#include "maps/map_unddm2.qc"
#include "maps/map_utressor.qc"
#include "maps/map_vdm2.qc"
#include "maps/map_vdm3.qc"
#include "maps/map_vendetta.qc"
#include "maps/map_vision1.qc"
#include "maps/map_warfare.qc"
#include "maps/map_warfare2.qc"
#include "maps/map_warfare3.qc"
#include "maps/map_wildtest.qc"
#include "maps/map_xl1dm1.qc"
#include "maps/map_xl1dm2.qc"
#include "maps/map_xl1dm3.qc"
#include "maps/map_xl1dm4.qc"
#include "maps/map_xl1dm5.qc"
#include "maps/map_xl1dm6.qc"
#include "maps/map_xl1dm7.qc"
#include "maps/map_ztndm1.qc"
#include "maps/map_ztndm2.qc"
#include "maps/map_ztndm3.qc"
#include "maps/map_ztndm4.qc"
#include "maps/map_ztndm5.qc"
#include "maps/map_ztndm6.qc"
void() WP_DoLoad =
{
	if (mapname == "a2")
	{
		map_a2();
		return;
	}

	if (mapname == "aerowalk")
	{
		map_aerowalk();
		return;
	}

	if (mapname == "agenda")
	{
		map_agenda();
		return;
	}

	if (mapname == "agent")
	{
		map_agent();
		return;
	}

	if (mapname == "aggressr")
	{
		map_aggressr();
		return;
	}

	if (mapname == "airar")
	{
		map_airar();
		return;
	}

	if (mapname == "alcyone")
	{
		map_alcyone();
		return;
	}

	if (mapname == "alk08dm")
	{
		map_alk08dm();
		return;
	}

	if (mapname == "amphi")
	{
		map_amphi();
		return;
	}

	if (mapname == "amphi2")
	{
		map_amphi2();
		return;
	}

	if (mapname == "androm9")
	{
		map_androm9();
		return;
	}

	if (mapname == "argonaut")
	{
		map_argonaut();
		return;
	}

	if (mapname == "auhdm1")
	{
		map_auhdm1();
		return;
	}

	if (mapname == "auhdm2")
	{
		map_auhdm2();
		return;
	}

	if (mapname == "b256")
	{
		map_b256();
		return;
	}

	if (mapname == "b2s")
	{
		map_b2s();
		return;
	}

	if (mapname == "badwalk")
	{
		map_badwalk();
		return;
	}

	if (mapname == "baldm2")
	{
		map_baldm2();
		return;
	}

	if (mapname == "baldm3")
	{
		map_baldm3();
		return;
	}

	if (mapname == "baldm4")
	{
		map_baldm4();
		return;
	}

	if (mapname == "baldm5")
	{
		map_baldm5();
		return;
	}

	if (mapname == "baldm6")
	{
		map_baldm6();
		return;
	}

	if (mapname == "baldm7")
	{
		map_baldm7();
		return;
	}

	if (mapname == "baldm8")
	{
		map_baldm8();
		return;
	}

	if (mapname == "battle")
	{
		map_battle();
		return;
	}

	if (mapname == "bless")
	{
		map_bless();
		return;
	}

	if (mapname == "blessed")
	{
		map_blessed();
		return;
	}

	if (mapname == "blizz2")
	{
		map_blizz2();
		return;
	}

	if (mapname == "bovine")
	{
		map_bovine();
		return;
	}

	if (mapname == "br11m")
	{
		map_br11m();
		return;
	}

	if (mapname == "br13m")
	{
		map_br13m();
		return;
	}

	if (mapname == "br18m")
	{
		map_br18m();
		return;
	}

	if (mapname == "br20m")
	{
		map_br20m();
		return;
	}

	if (mapname == "br21m")
	{
		map_br21m();
		return;
	}

	if (mapname == "br21ma")
	{
		map_br21ma();
		return;
	}

	if (mapname == "bsdm6")
	{
		map_bsdm6();
		return;
	}

	if (mapname == "bsdm7")
	{
		map_bsdm7();
		return;
	}

	if (mapname == "bsdm8")
	{
		map_bsdm8();
		return;
	}

	if (mapname == "bsp")
	{
		map_bsp();
		return;
	}

	if (mapname == "carddm2")
	{
		map_carddm2();
		return;
	}

	if (mapname == "cathexis_vis")
	{
		map_cathexis_vis();
		return;
	}

	if (mapname == "cbadm1")
	{
		map_cbadm1();
		return;
	}

	if (mapname == "cbadm2")
	{
		map_cbadm2();
		return;
	}

	if (mapname == "cbadm2v2")
	{
		map_cbadm2v2();
		return;
	}

	if (mapname == "cbadm3")
	{
		map_cbadm3();
		return;
	}

	if (mapname == "chesdm1")
	{
		map_chesdm1();
		return;
	}

	if (mapname == "cleaver")
	{
		map_cleaver();
		return;
	}

	if (mapname == "cmt1b")
	{
		map_cmt1b();
		return;
	}

	if (mapname == "cmt3")
	{
		map_cmt3();
		return;
	}

	if (mapname == "cmt4")
	{
		map_cmt4();
		return;
	}

	if (mapname == "cmt5b")
	{
		map_cmt5b();
		return;
	}

	if (mapname == "condemn")
	{
		map_condemn();
		return;
	}

	if (mapname == "cpm1qw")
	{
		map_cpm1qw();
		return;
	}

	if (mapname == "cpm3qw")
	{
		map_cpm3qw();
		return;
	}

	if (mapname == "crdm2")
	{
		map_crdm2();
		return;
	}

	if (mapname == "dakdm1")
	{
		map_dakdm1();
		return;
	}

	if (mapname == "dakdm2")
	{
		map_dakdm2();
		return;
	}

	if (mapname == "damaul7")
	{
		map_damaul7();
		return;
	}

	if (mapname == "dapak1")
	{
		map_dapak1();
		return;
	}

	if (mapname == "dapak10")
	{
		map_dapak10();
		return;
	}

	if (mapname == "dapak11")
	{
		map_dapak11();
		return;
	}

	if (mapname == "dapak12")
	{
		map_dapak12();
		return;
	}

	if (mapname == "dapak2")
	{
		map_dapak2();
		return;
	}

	if (mapname == "dapak3")
	{
		map_dapak3();
		return;
	}

	if (mapname == "dapak4")
	{
		map_dapak4();
		return;
	}

	if (mapname == "dapak5")
	{
		map_dapak5();
		return;
	}

	if (mapname == "dapak6")
	{
		map_dapak6();
		return;
	}

	if (mapname == "dapak7")
	{
		map_dapak7();
		return;
	}

	if (mapname == "dapak9")
	{
		map_dapak9();
		return;
	}

	if (mapname == "darkthree")
	{
		map_darkthree();
		return;
	}

	if (mapname == "dead")
	{
		map_dead();
		return;
	}

	if (mapname == "debello")
	{
		map_debello();
		return;
	}

	if (mapname == "del1")
	{
		map_del1();
		return;
	}

	if (mapname == "dm1")
	{
		map_dm1();
		return;
	}

	if (mapname == "dm1a")
	{
		map_dm1a();
		return;
	}

	if (mapname == "dm2dmm4")
	{
		map_dm2dmm4();
		return;
	}

	if (mapname == "dm3")
	{
		map_dm3();
		return;
	}

	if (mapname == "dm3hill")
	{
		map_dm3hill();
		return;
	}

	if (mapname == "dm3ish")
	{
		map_dm3ish();
		return;
	}

	if (mapname == "dm4")
	{
		map_dm4();
		return;
	}

	if (mapname == "dm4ish")
	{
		map_dm4ish();
		return;
	}

	if (mapname == "dm5")
	{
		map_dm5();
		return;
	}

	if (mapname == "dm5a")
	{
		map_dm5a();
		return;
	}

	if (mapname == "dm6")
	{
		map_dm6();
		return;
	}

	if (mapname == "dm6dmm4")
	{
		map_dm6dmm4();
		return;
	}

	if (mapname == "dm6quad")
	{
		map_dm6quad();
		return;
	}

	if (mapname == "dm7")
	{
		map_dm7();
		return;
	}

	if (mapname == "dm99a")
	{
		map_dm99a();
		return;
	}

	if (mapname == "dmfdm2")
	{
		map_dmfdm2();
		return;
	}

	if (mapname == "dmm4_1")
	{
		map_dmm4_1();
		return;
	}

	if (mapname == "dmm4_3")
	{
		map_dmm4_3();
		return;
	}

	if (mapname == "dp6")
	{
		map_dp6();
		return;
	}

	if (mapname == "dranzdm6")
	{
		map_dranzdm6();
		return;
	}

	if (mapname == "dranzdm7")
	{
		map_dranzdm7();
		return;
	}

	if (mapname == "dranzdm8")
	{
		map_dranzdm8();
		return;
	}

	if (mapname == "dsn")
	{
		map_dsn();
		return;
	}

	if (mapname == "duel1")
	{
		map_duel1();
		return;
	}

	if (mapname == "e1m1")
	{
		map_e1m1();
		return;
	}

	if (mapname == "e1m2")
	{
		map_e1m2();
		return;
	}

	if (mapname == "e1m3")
	{
		map_e1m3();
		return;
	}

	if (mapname == "e1m5")
	{
		map_e1m5();
		return;
	}

	if (mapname == "e1m5duel")
	{
		map_e1m5duel();
		return;
	}

	if (mapname == "e1m6")
	{
		map_e1m6();
		return;
	}

	if (mapname == "e1m7")
	{
		map_e1m7();
		return;
	}

	if (mapname == "e2m1")
	{
		map_e2m1();
		return;
	}

	if (mapname == "e2m2")
	{
		map_e2m2();
		return;
	}

	if (mapname == "e2m2tdm")
	{
		map_e2m2tdm();
		return;
	}

	if (mapname == "e2m5")
	{
		map_e2m5();
		return;
	}

	if (mapname == "e3m2")
	{
		map_e3m2();
		return;
	}

	if (mapname == "e3m7tdm")
	{
		map_e3m7tdm();
		return;
	}

	if (mapname == "edc")
	{
		map_edc();
		return;
	}

	if (mapname == "efdm1")
	{
		map_efdm1();
		return;
	}

	if (mapname == "efdm10")
	{
		map_efdm10();
		return;
	}

	if (mapname == "efdm11")
	{
		map_efdm11();
		return;
	}

	if (mapname == "efdm12")
	{
		map_efdm12();
		return;
	}

	if (mapname == "efdm13")
	{
		map_efdm13();
		return;
	}

	if (mapname == "efdm2")
	{
		map_efdm2();
		return;
	}

	if (mapname == "efdm3")
	{
		map_efdm3();
		return;
	}

	if (mapname == "efdm4")
	{
		map_efdm4();
		return;
	}

	if (mapname == "efdm5")
	{
		map_efdm5();
		return;
	}

	if (mapname == "efdm6")
	{
		map_efdm6();
		return;
	}

	if (mapname == "efdm7")
	{
		map_efdm7();
		return;
	}

	if (mapname == "efdm8")
	{
		map_efdm8();
		return;
	}

	if (mapname == "efdm9")
	{
		map_efdm9();
		return;
	}

	if (mapname == "effigy")
	{
		map_effigy();
		return;
	}

	if (mapname == "egyptele")
	{
		map_egyptele();
		return;
	}

	if (mapname == "elbow")
	{
		map_elbow();
		return;
	}

	if (mapname == "end")
	{
		map_end();
		return;
	}

	if (mapname == "enraged")
	{
		map_enraged();
		return;
	}

	if (mapname == "eodm3")
	{
		map_eodm3();
		return;
	}

	if (mapname == "evdm1")
	{
		map_evdm1();
		return;
	}

	if (mapname == "exdm2")
	{
		map_exdm2();
		return;
	}

	if (mapname == "exdm3")
	{
		map_exdm3();
		return;
	}

	if (mapname == "exdm4")
	{
		map_exdm4();
		return;
	}

	if (mapname == "fbdm2")
	{
		map_fbdm2();
		return;
	}

	if (mapname == "fbe3m7")
	{
		map_fbe3m7();
		return;
	}

	if (mapname == "ferrum")
	{
		map_ferrum();
		return;
	}

	if (mapname == "filthy")
	{
		map_filthy();
		return;
	}

	if (mapname == "fmc")
	{
		map_fmc();
		return;
	}

	if (mapname == "four")
	{
		map_four();
		return;
	}

	if (mapname == "frag")
	{
		map_frag();
		return;
	}

	if (mapname == "fragtwn1")
	{
		map_fragtwn1();
		return;
	}

	if (mapname == "fribdev1")
	{
		map_fribdev1();
		return;
	}

	if (mapname == "fribweb1")
	{
		map_fribweb1();
		return;
	}

	if (mapname == "frobodm1")
	{
		map_frobodm1();
		return;
	}

	if (mapname == "frobodm2")
	{
		map_frobodm2();
		return;
	}

	if (mapname == "frobodm5")
	{
		map_frobodm5();
		return;
	}

	if (mapname == "frontier")
	{
		map_frontier();
		return;
	}

	if (mapname == "gencldm6")
	{
		map_gencldm6();
		return;
	}

	if (mapname == "gendm2")
	{
		map_gendm2();
		return;
	}

	if (mapname == "genocide")
	{
		map_genocide();
		return;
	}

	if (mapname == "geodm1")
	{
		map_geodm1();
		return;
	}

	if (mapname == "gomdm2")
	{
		map_gomdm2();
		return;
	}

	if (mapname == "gomdm2v2")
	{
		map_gomdm2v2();
		return;
	}

	if (mapname == "gomdm3")
	{
		map_gomdm3();
		return;
	}

	if (mapname == "gomdm4")
	{
		map_gomdm4();
		return;
	}

	if (mapname == "gomdm5")
	{
		map_gomdm5();
		return;
	}

	if (mapname == "gomdm6")
	{
		map_gomdm6();
		return;
	}

	if (mapname == "grim")
	{
		map_grim();
		return;
	}

	if (mapname == "hate")
	{
		map_hate();
		return;
	}

	if (mapname == "hill20")
	{
		map_hill20();
		return;
	}

	if (mapname == "icearena")
	{
		map_icearena();
		return;
	}

	if (mapname == "id3")
	{
		map_id3();
		return;
	}

	if (mapname == "ikdm9q1")
	{
		map_ikdm9q1();
		return;
	}

	if (mapname == "imp1dm5")
	{
		map_imp1dm5();
		return;
	}

	if (mapname == "imp1dm6")
	{
		map_imp1dm6();
		return;
	}

	if (mapname == "impdm2")
	{
		map_impdm2();
		return;
	}

	if (mapname == "impdm3")
	{
		map_impdm3();
		return;
	}

	if (mapname == "inerb18b")
	{
		map_inerb18b();
		return;
	}

	if (mapname == "infect")
	{
		map_infect();
		return;
	}

	if (mapname == "insomnia")
	{
		map_insomnia();
		return;
	}

	if (mapname == "jadm1")
	{
		map_jadm1();
		return;
	}

	if (mapname == "jndm6")
	{
		map_jndm6();
		return;
	}

	if (mapname == "jrdm1")
	{
		map_jrdm1();
		return;
	}

	if (mapname == "jrdm2")
	{
		map_jrdm2();
		return;
	}

	if (mapname == "jvoxdm2")
	{
		map_jvoxdm2();
		return;
	}

	if (mapname == "jvx1")
	{
		map_jvx1();
		return;
	}

	if (mapname == "kdmw")
	{
		map_kdmw();
		return;
	}

	if (mapname == "kikdm3")
	{
		map_kikdm3();
		return;
	}

	if (mapname == "kikdm6")
	{
		map_kikdm6();
		return;
	}

	if (mapname == "kingdom")
	{
		map_kingdom();
		return;
	}

	if (mapname == "kjdm12")
	{
		map_kjdm12();
		return;
	}

	if (mapname == "kjdm13")
	{
		map_kjdm13();
		return;
	}

	if (mapname == "klzinsanity")
	{
		map_klzinsanity();
		return;
	}

	if (mapname == "klzvob")
	{
		map_klzvob();
		return;
	}

	if (mapname == "kz1on1a")
	{
		map_kz1on1a();
		return;
	}

	if (mapname == "lacrima")
	{
		map_lacrima();
		return;
	}

	if (mapname == "lady")
	{
		map_lady();
		return;
	}

	if (mapname == "leaks")
	{
		map_leaks();
		return;
	}

	if (mapname == "lilith")
	{
		map_lilith();
		return;
	}

	if (mapname == "lock")
	{
		map_lock();
		return;
	}

	if (mapname == "magus")
	{
		map_magus();
		return;
	}

	if (mapname == "maricsq1_1")
	{
		map_maricsq1_1();
		return;
	}

	if (mapname == "maricsq1_2")
	{
		map_maricsq1_2();
		return;
	}

	if (mapname == "matdm1")
	{
		map_matdm1();
		return;
	}

	if (mapname == "matdm2")
	{
		map_matdm2();
		return;
	}

	if (mapname == "mayhem")
	{
		map_mayhem();
		return;
	}

	if (mapname == "messy")
	{
		map_messy();
		return;
	}

	if (mapname == "midair3")
	{
		map_midair3();
		return;
	}

	if (mapname == "mine")
	{
		map_mine();
		return;
	}

	if (mapname == "misdm10")
	{
		map_misdm10();
		return;
	}

	if (mapname == "misdm11a")
	{
		map_misdm11a();
		return;
	}

	if (mapname == "misdm12")
	{
		map_misdm12();
		return;
	}

	if (mapname == "misdm13")
	{
		map_misdm13();
		return;
	}

	if (mapname == "misdm6")
	{
		map_misdm6();
		return;
	}

	if (mapname == "misdm8")
	{
		map_misdm8();
		return;
	}

	if (mapname == "misdm9")
	{
		map_misdm9();
		return;
	}

	if (mapname == "mjdm1pro")
	{
		map_mjdm1pro();
		return;
	}

	if (mapname == "muny16")
	{
		map_muny16();
		return;
	}

	if (mapname == "naked3")
	{
		map_naked3();
		return;
	}

	if (mapname == "naked4")
	{
		map_naked4();
		return;
	}

	if (mapname == "naked5")
	{
		map_naked5();
		return;
	}

	if (mapname == "naked6")
	{
		map_naked6();
		return;
	}

	if (mapname == "naked7b2")
	{
		map_naked7b2();
		return;
	}

	if (mapname == "nduel")
	{
		map_nduel();
		return;
	}

	if (mapname == "nindm2")
	{
		map_nindm2();
		return;
	}

	if (mapname == "nindm3")
	{
		map_nindm3();
		return;
	}

	if (mapname == "nindm3v2")
	{
		map_nindm3v2();
		return;
	}

	if (mapname == "njx9dm")
	{
		map_njx9dm();
		return;
	}

	if (mapname == "noentry")
	{
		map_noentry();
		return;
	}

	if (mapname == "odd1")
	{
		map_odd1();
		return;
	}

	if (mapname == "odd2")
	{
		map_odd2();
		return;
	}

	if (mapname == "oktest1")
	{
		map_oktest1();
		return;
	}

	if (mapname == "oldcrat")
	{
		map_oldcrat();
		return;
	}

	if (mapname == "oldcrat2")
	{
		map_oldcrat2();
		return;
	}

	if (mapname == "oma")
	{
		map_oma();
		return;
	}

	if (mapname == "omf")
	{
		map_omf();
		return;
	}

	if (mapname == "opposit")
	{
		map_opposit();
		return;
	}

	if (mapname == "outpost")
	{
		map_outpost();
		return;
	}

	if (mapname == "p3a")
	{
		map_p3a();
		return;
	}

	if (mapname == "pbrdm2")
	{
		map_pbrdm2();
		return;
	}

	if (mapname == "pen2")
	{
		map_pen2();
		return;
	}

	if (mapname == "pidmm5")
	{
		map_pidmm5();
		return;
	}

	if (mapname == "pinion1")
	{
		map_pinion1();
		return;
	}

	if (mapname == "pinion2")
	{
		map_pinion2();
		return;
	}

	if (mapname == "pinion3")
	{
		map_pinion3();
		return;
	}

	if (mapname == "pipeline")
	{
		map_pipeline();
		return;
	}

	if (mapname == "pkeg1")
	{
		map_pkeg1();
		return;
	}

	if (mapname == "pkeg2")
	{
		map_pkeg2();
		return;
	}

	if (mapname == "pldm1ex")
	{
		map_pldm1ex();
		return;
	}

	if (mapname == "pli")
	{
		map_pli();
		return;
	}

	if (mapname == "plpak1")
	{
		map_plpak1();
		return;
	}

	if (mapname == "plpak10")
	{
		map_plpak10();
		return;
	}

	if (mapname == "plpak11")
	{
		map_plpak11();
		return;
	}

	if (mapname == "plpak12")
	{
		map_plpak12();
		return;
	}

	if (mapname == "plpak2")
	{
		map_plpak2();
		return;
	}

	if (mapname == "plpak3")
	{
		map_plpak3();
		return;
	}

	if (mapname == "plpak4")
	{
		map_plpak4();
		return;
	}

	if (mapname == "plpak5")
	{
		map_plpak5();
		return;
	}

	if (mapname == "plpak6")
	{
		map_plpak6();
		return;
	}

	if (mapname == "plpak7")
	{
		map_plpak7();
		return;
	}

	if (mapname == "plpak8")
	{
		map_plpak8();
		return;
	}

	if (mapname == "plpak9")
	{
		map_plpak9();
		return;
	}

	if (mapname == "pope2")
	{
		map_pope2();
		return;
	}

	if (mapname == "pope3")
	{
		map_pope3();
		return;
	}

	if (mapname == "pope4")
	{
		map_pope4();
		return;
	}

	if (mapname == "pope6")
	{
		map_pope6();
		return;
	}

	if (mapname == "povdmm4")
	{
		map_povdmm4();
		return;
	}

	if (mapname == "primedm")
	{
		map_primedm();
		return;
	}

	if (mapname == "prodm4")
	{
		map_prodm4();
		return;
	}

	if (mapname == "pushdmm4")
	{
		map_pushdmm4();
		return;
	}

	if (mapname == "q1_q2dm1")
	{
		map_q1_q2dm1();
		return;
	}

	if (mapname == "q1arena")
	{
		map_q1arena();
		return;
	}

	if (mapname == "q1arenax")
	{
		map_q1arenax();
		return;
	}

	if (mapname == "q1base1")
	{
		map_q1base1();
		return;
	}

	if (mapname == "q1edge")
	{
		map_q1edge();
		return;
	}

	if (mapname == "q1tm_speedy")
	{
		map_q1tm_speedy();
		return;
	}

	if (mapname == "q2dm7")
	{
		map_q2dm7();
		return;
	}

	if (mapname == "q3dm6qw")
	{
		map_q3dm6qw();
		return;
	}

	if (mapname == "qffldm5")
	{
		map_qffldm5();
		return;
	}

	if (mapname == "qtdm1")
	{
		map_qtdm1();
		return;
	}

	if (mapname == "qtourney2")
	{
		map_qtourney2();
		return;
	}

	if (mapname == "quadrock")
	{
		map_quadrock();
		return;
	}

	if (mapname == "ranbase")
	{
		map_ranbase();
		return;
	}

	if (mapname == "rapture1")
	{
		map_rapture1();
		return;
	}

	if (mapname == "rapture2")
	{
		map_rapture2();
		return;
	}

	if (mapname == "rarena3")
	{
		map_rarena3();
		return;
	}

	if (mapname == "ravage")
	{
		map_ravage();
		return;
	}

	if (mapname == "ravage2")
	{
		map_ravage2();
		return;
	}

	if (mapname == "razzi")
	{
		map_razzi();
		return;
	}

	if (mapname == "rev68")
	{
		map_rev68();
		return;
	}

	if (mapname == "rf2")
	{
		map_rf2();
		return;
	}

	if (mapname == "rgarden")
	{
		map_rgarden();
		return;
	}

	if (mapname == "rip")
	{
		map_rip();
		return;
	}

	if (mapname == "ritual")
	{
		map_ritual();
		return;
	}

	if (mapname == "rpdm10")
	{
		map_rpdm10();
		return;
	}

	if (mapname == "rpgdm1")
	{
		map_rpgdm1();
		return;
	}

	if (mapname == "rtldm3")
	{
		map_rtldm3();
		return;
	}

	if (mapname == "ruins")
	{
		map_ruins();
		return;
	}

	if (mapname == "rwild")
	{
		map_rwild();
		return;
	}

	if (mapname == "safe1")
	{
		map_safe1();
		return;
	}

	if (mapname == "safe2")
	{
		map_safe2();
		return;
	}

	if (mapname == "sanity")
	{
		map_sanity();
		return;
	}

	if (mapname == "santzue")
	{
		map_santzue();
		return;
	}

	if (mapname == "scampdm5")
	{
		map_scampdm5();
		return;
	}

	if (mapname == "schloss")
	{
		map_schloss();
		return;
	}

	if (mapname == "shadows")
	{
		map_shadows();
		return;
	}

	if (mapname == "shadowsb7")
	{
		map_shadowsb7();
		return;
	}

	if (mapname == "shady")
	{
		map_shady();
		return;
	}

	if (mapname == "shake")
	{
		map_shake();
		return;
	}

	if (mapname == "shine")
	{
		map_shine();
		return;
	}

	if (mapname == "shroud")
	{
		map_shroud();
		return;
	}

	if (mapname == "shroud2")
	{
		map_shroud2();
		return;
	}

	if (mapname == "silence")
	{
		map_silence();
		return;
	}

	if (mapname == "skull")
	{
		map_skull();
		return;
	}

	if (mapname == "skywalk")
	{
		map_skywalk();
		return;
	}

	if (mapname == "slip")
	{
		map_slip();
		return;
	}

	if (mapname == "sm")
	{
		map_sm();
		return;
	}

	if (mapname == "sm30_ray")
	{
		map_sm30_ray();
		return;
	}

	if (mapname == "spank1")
	{
		map_spank1();
		return;
	}

	if (mapname == "spd")
	{
		map_spd();
		return;
	}

	if (mapname == "spear")
	{
		map_spear();
		return;
	}

	if (mapname == "spine")
	{
		map_spine();
		return;
	}

	if (mapname == "spinev2")
	{
		map_spinev2();
		return;
	}

	if (mapname == "start")
	{
		map_start();
		return;
	}

	if (mapname == "strafin1")
	{
		map_strafin1();
		return;
	}

	if (mapname == "strafin2")
	{
		map_strafin2();
		return;
	}

	if (mapname == "strafin3")
	{
		map_strafin3();
		return;
	}

	if (mapname == "strafin4")
	{
		map_strafin4();
		return;
	}

	if (mapname == "strafin5")
	{
		map_strafin5();
		return;
	}

	if (mapname == "strafin6")
	{
		map_strafin6();
		return;
	}

	if (mapname == "strmland")
	{
		map_strmland();
		return;
	}

	if (mapname == "sudden")
	{
		map_sudden();
		return;
	}

	if (mapname == "summer")
	{
		map_summer();
		return;
	}

	if (mapname == "swtdie")
	{
		map_swtdie();
		return;
	}

	if (mapname == "tbase")
	{
		map_tbase();
		return;
	}

	if (mapname == "tearena")
	{
		map_tearena();
		return;
	}

	if (mapname == "teritory")
	{
		map_teritory();
		return;
	}

	if (mapname == "theend")
	{
		map_theend();
		return;
	}

	if (mapname == "thf")
	{
		map_thf();
		return;
	}

	if (mapname == "timeless")
	{
		map_timeless();
		return;
	}

	if (mapname == "titan2")
	{
		map_titan2();
		return;
	}

	if (mapname == "trallefinal")
	{
		map_trallefinal();
		return;
	}

	if (mapname == "trdmm4")
	{
		map_trdmm4();
		return;
	}

	if (mapname == "trindm1")
	{
		map_trindm1();
		return;
	}

	if (mapname == "trindm2")
	{
		map_trindm2();
		return;
	}

	if (mapname == "trindm3")
	{
		map_trindm3();
		return;
	}

	if (mapname == "trondm1")
	{
		map_trondm1();
		return;
	}

	if (mapname == "trondm2")
	{
		map_trondm2();
		return;
	}

	if (mapname == "tsd")
	{
		map_tsd();
		return;
	}

	if (mapname == "tumour2")
	{
		map_tumour2();
		return;
	}

	if (mapname == "uarena1")
	{
		map_uarena1();
		return;
	}

	if (mapname == "ukcldm2")
	{
		map_ukcldm2();
		return;
	}

	if (mapname == "ukcldm6")
	{
		map_ukcldm6();
		return;
	}

	if (mapname == "ukooldm2")
	{
		map_ukooldm2();
		return;
	}

	if (mapname == "ukooldm3")
	{
		map_ukooldm3();
		return;
	}

	if (mapname == "ukooldm4")
	{
		map_ukooldm4();
		return;
	}

	if (mapname == "ukooldm6")
	{
		map_ukooldm6();
		return;
	}

	if (mapname == "ukooldm8")
	{
		map_ukooldm8();
		return;
	}

	if (mapname == "ukpak1")
	{
		map_ukpak1();
		return;
	}

	if (mapname == "ukpak2")
	{
		map_ukpak2();
		return;
	}

	if (mapname == "ukpak5")
	{
		map_ukpak5();
		return;
	}

	if (mapname == "ukpak6")
	{
		map_ukpak6();
		return;
	}

	if (mapname == "ukpak8")
	{
		map_ukpak8();
		return;
	}

	if (mapname == "ultrav")
	{
		map_ultrav();
		return;
	}

	if (mapname == "unddm1")
	{
		map_unddm1();
		return;
	}

	if (mapname == "unddm2")
	{
		map_unddm2();
		return;
	}

	if (mapname == "utressor")
	{
		map_utressor();
		return;
	}

	if (mapname == "vdm2")
	{
		map_vdm2();
		return;
	}

	if (mapname == "vdm3")
	{
		map_vdm3();
		return;
	}

	if (mapname == "vendetta")
	{
		map_vendetta();
		return;
	}

	if (mapname == "vision1")
	{
		map_vision1();
		return;
	}

	if (mapname == "warfare")
	{
		map_warfare();
		return;
	}

	if (mapname == "warfare2")
	{
		map_warfare2();
		return;
	}

	if (mapname == "warfare3")
	{
		map_warfare3();
		return;
	}

	if (mapname == "wildtest")
	{
		map_wildtest();
		return;
	}

	if (mapname == "xl1dm1")
	{
		map_xl1dm1();
		return;
	}

	if (mapname == "xl1dm2")
	{
		map_xl1dm2();
		return;
	}

	if (mapname == "xl1dm3")
	{
		map_xl1dm3();
		return;
	}

	if (mapname == "xl1dm4")
	{
		map_xl1dm4();
		return;
	}

	if (mapname == "xl1dm5")
	{
		map_xl1dm5();
		return;
	}

	if (mapname == "xl1dm6")
	{
		map_xl1dm6();
		return;
	}

	if (mapname == "xl1dm7")
	{
		map_xl1dm7();
		return;
	}

	if (mapname == "ztndm1")
	{
		map_ztndm1();
		return;
	}

	if (mapname == "ztndm2")
	{
		map_ztndm2();
		return;
	}

	if (mapname == "ztndm3")
	{
		map_ztndm3();
		return;
	}

	if (mapname == "ztndm4")
	{
		map_ztndm4();
		return;
	}

	if (mapname == "ztndm5")
	{
		map_ztndm5();
		return;
	}

	if (mapname == "ztndm6")
	{
		map_ztndm6();
		return;
	}

};

string(string mname) MapHasWaypoints =
{
	if (mname == "a2")
		return "a2";
	if (mname == "aerowalk")
		return "aerowalk";
	if (mname == "agenda")
		return "agenda";
	if (mname == "agent")
		return "agent";
	if (mname == "aggressr")
		return "aggressr";
	if (mname == "airar")
		return "airar";
	if (mname == "alcyone")
		return "alcyone";
	if (mname == "alk08dm")
		return "alk08dm";
	if (mname == "amphi")
		return "amphi";
	if (mname == "amphi2")
		return "amphi2";
	if (mname == "androm9")
		return "androm9";
	if (mname == "argonaut")
		return "argonaut";
	if (mname == "auhdm1")
		return "auhdm1";
	if (mname == "auhdm2")
		return "auhdm2";
	if (mname == "b256")
		return "b256";
	if (mname == "b2s")
		return "b2s";
	if (mname == "badwalk")
		return "badwalk";
	if (mname == "baldm2")
		return "baldm2";
	if (mname == "baldm3")
		return "baldm3";
	if (mname == "baldm4")
		return "baldm4";
	if (mname == "baldm5")
		return "baldm5";
	if (mname == "baldm6")
		return "baldm6";
	if (mname == "baldm7")
		return "baldm7";
	if (mname == "baldm8")
		return "baldm8";
	if (mname == "battle")
		return "battle";
	if (mname == "bless")
		return "bless";
	if (mname == "blessed")
		return "blessed";
	if (mname == "blizz2")
		return "blizz2";
	if (mname == "bovine")
		return "bovine";
	if (mname == "br11m")
		return "br11m";
	if (mname == "br13m")
		return "br13m";
	if (mname == "br18m")
		return "br18m";
	if (mname == "br20m")
		return "br20m";
	if (mname == "br21m")
		return "br21m";
	if (mname == "br21ma")
		return "br21ma";
	if (mname == "bsdm6")
		return "bsdm6";
	if (mname == "bsdm7")
		return "bsdm7";
	if (mname == "bsdm8")
		return "bsdm8";
	if (mname == "bsp")
		return "bsp";
	if (mname == "carddm2")
		return "carddm2";
	if (mname == "cathexis_vis")
		return "cathexis_vis";
	if (mname == "cbadm1")
		return "cbadm1";
	if (mname == "cbadm2")
		return "cbadm2";
	if (mname == "cbadm2v2")
		return "cbadm2v2";
	if (mname == "cbadm3")
		return "cbadm3";
	if (mname == "chesdm1")
		return "chesdm1";
	if (mname == "cleaver")
		return "cleaver";
	if (mname == "cmt1b")
		return "cmt1b";
	if (mname == "cmt3")
		return "cmt3";
	if (mname == "cmt4")
		return "cmt4";
	if (mname == "cmt5b")
		return "cmt5b";
	if (mname == "condemn")
		return "condemn";
	if (mname == "cpm1qw")
		return "cpm1qw";
	if (mname == "cpm3qw")
		return "cpm3qw";
	if (mname == "crdm2")
		return "crdm2";
	if (mname == "dakdm1")
		return "dakdm1";
	if (mname == "dakdm2")
		return "dakdm2";
	if (mname == "damaul7")
		return "damaul7";
	if (mname == "dapak1")
		return "dapak1";
	if (mname == "dapak10")
		return "dapak10";
	if (mname == "dapak11")
		return "dapak11";
	if (mname == "dapak12")
		return "dapak12";
	if (mname == "dapak2")
		return "dapak2";
	if (mname == "dapak3")
		return "dapak3";
	if (mname == "dapak4")
		return "dapak4";
	if (mname == "dapak5")
		return "dapak5";
	if (mname == "dapak6")
		return "dapak6";
	if (mname == "dapak7")
		return "dapak7";
	if (mname == "dapak9")
		return "dapak9";
	if (mname == "darkthree")
		return "darkthree";
	if (mname == "dead")
		return "dead";
	if (mname == "debello")
		return "debello";
	if (mname == "del1")
		return "del1";
	if (mname == "dm1")
		return "dm1";
	if (mname == "dm1a")
		return "dm1a";
	if (mname == "dm2dmm4")
		return "dm2dmm4";
	if (mname == "dm3")
		return "dm3";
	if (mname == "dm3hill")
		return "dm3hill";
	if (mname == "dm3ish")
		return "dm3ish";
	if (mname == "dm4")
		return "dm4";
	if (mname == "dm4ish")
		return "dm4ish";
	if (mname == "dm5")
		return "dm5";
	if (mname == "dm5a")
		return "dm5a";
	if (mname == "dm6")
		return "dm6";
	if (mname == "dm6dmm4")
		return "dm6dmm4";
	if (mname == "dm6quad")
		return "dm6quad";
	if (mname == "dm7")
		return "dm7";
	if (mname == "dm99a")
		return "dm99a";
	if (mname == "dmfdm2")
		return "dmfdm2";
	if (mname == "dmm4_1")
		return "dmm4_1";
	if (mname == "dmm4_3")
		return "dmm4_3";
	if (mname == "dp6")
		return "dp6";
	if (mname == "dranzdm6")
		return "dranzdm6";
	if (mname == "dranzdm7")
		return "dranzdm7";
	if (mname == "dranzdm8")
		return "dranzdm8";
	if (mname == "dsn")
		return "dsn";
	if (mname == "duel1")
		return "duel1";
	if (mname == "e1m1")
		return "e1m1";
	if (mname == "e1m2")
		return "e1m2";
	if (mname == "e1m3")
		return "e1m3";
	if (mname == "e1m5")
		return "e1m5";
	if (mname == "e1m5duel")
		return "e1m5duel";
	if (mname == "e1m6")
		return "e1m6";
	if (mname == "e1m7")
		return "e1m7";
	if (mname == "e2m1")
		return "e2m1";
	if (mname == "e2m2")
		return "e2m2";
	if (mname == "e2m2tdm")
		return "e2m2tdm";
	if (mname == "e2m5")
		return "e2m5";
	if (mname == "e3m2")
		return "e3m2";
	if (mname == "e3m7tdm")
		return "e3m7tdm";
	if (mname == "edc")
		return "edc";
	if (mname == "efdm1")
		return "efdm1";
	if (mname == "efdm10")
		return "efdm10";
	if (mname == "efdm11")
		return "efdm11";
	if (mname == "efdm12")
		return "efdm12";
	if (mname == "efdm13")
		return "efdm13";
	if (mname == "efdm2")
		return "efdm2";
	if (mname == "efdm3")
		return "efdm3";
	if (mname == "efdm4")
		return "efdm4";
	if (mname == "efdm5")
		return "efdm5";
	if (mname == "efdm6")
		return "efdm6";
	if (mname == "efdm7")
		return "efdm7";
	if (mname == "efdm8")
		return "efdm8";
	if (mname == "efdm9")
		return "efdm9";
	if (mname == "effigy")
		return "effigy";
	if (mname == "egyptele")
		return "egyptele";
	if (mname == "elbow")
		return "elbow";
	if (mname == "end")
		return "end";
	if (mname == "enraged")
		return "enraged";
	if (mname == "eodm3")
		return "eodm3";
	if (mname == "evdm1")
		return "evdm1";
	if (mname == "exdm2")
		return "exdm2";
	if (mname == "exdm3")
		return "exdm3";
	if (mname == "exdm4")
		return "exdm4";
	if (mname == "fbdm2")
		return "fbdm2";
	if (mname == "fbe3m7")
		return "fbe3m7";
	if (mname == "ferrum")
		return "ferrum";
	if (mname == "filthy")
		return "filthy";
	if (mname == "fmc")
		return "fmc";
	if (mname == "four")
		return "four";
	if (mname == "frag")
		return "frag";
	if (mname == "fragtwn1")
		return "fragtwn1";
	if (mname == "fribdev1")
		return "fribdev1";
	if (mname == "fribweb1")
		return "fribweb1";
	if (mname == "frobodm1")
		return "frobodm1";
	if (mname == "frobodm2")
		return "frobodm2";
	if (mname == "frobodm5")
		return "frobodm5";
	if (mname == "frontier")
		return "frontier";
	if (mname == "gencldm6")
		return "gencldm6";
	if (mname == "gendm2")
		return "gendm2";
	if (mname == "genocide")
		return "genocide";
	if (mname == "geodm1")
		return "geodm1";
	if (mname == "gomdm2")
		return "gomdm2";
	if (mname == "gomdm2v2")
		return "gomdm2v2";
	if (mname == "gomdm3")
		return "gomdm3";
	if (mname == "gomdm4")
		return "gomdm4";
	if (mname == "gomdm5")
		return "gomdm5";
	if (mname == "gomdm6")
		return "gomdm6";
	if (mname == "grim")
		return "grim";
	if (mname == "hate")
		return "hate";
	if (mname == "hill20")
		return "hill20";
	if (mname == "icearena")
		return "icearena";
	if (mname == "id3")
		return "id3";
	if (mname == "ikdm9q1")
		return "ikdm9q1";
	if (mname == "imp1dm5")
		return "imp1dm5";
	if (mname == "imp1dm6")
		return "imp1dm6";
	if (mname == "impdm2")
		return "impdm2";
	if (mname == "impdm3")
		return "impdm3";
	if (mname == "inerb18b")
		return "inerb18b";
	if (mname == "infect")
		return "infect";
	if (mname == "insomnia")
		return "insomnia";
	if (mname == "jadm1")
		return "jadm1";
	if (mname == "jndm6")
		return "jndm6";
	if (mname == "jrdm1")
		return "jrdm1";
	if (mname == "jrdm2")
		return "jrdm2";
	if (mname == "jvoxdm2")
		return "jvoxdm2";
	if (mname == "jvx1")
		return "jvx1";
	if (mname == "kdmw")
		return "kdmw";
	if (mname == "kikdm3")
		return "kikdm3";
	if (mname == "kikdm6")
		return "kikdm6";
	if (mname == "kingdom")
		return "kingdom";
	if (mname == "kjdm12")
		return "kjdm12";
	if (mname == "kjdm13")
		return "kjdm13";
	if (mname == "klzinsanity")
		return "klzinsanity";
	if (mname == "klzvob")
		return "klzvob";
	if (mname == "kz1on1a")
		return "kz1on1a";
	if (mname == "lacrima")
		return "lacrima";
	if (mname == "lady")
		return "lady";
	if (mname == "leaks")
		return "leaks";
	if (mname == "lilith")
		return "lilith";
	if (mname == "lock")
		return "lock";
	if (mname == "magus")
		return "magus";
	if (mname == "maricsq1_1")
		return "maricsq1_1";
	if (mname == "maricsq1_2")
		return "maricsq1_2";
	if (mname == "matdm1")
		return "matdm1";
	if (mname == "matdm2")
		return "matdm2";
	if (mname == "mayhem")
		return "mayhem";
	if (mname == "messy")
		return "messy";
	if (mname == "midair3")
		return "midair3";
	if (mname == "mine")
		return "mine";
	if (mname == "misdm10")
		return "misdm10";
	if (mname == "misdm11a")
		return "misdm11a";
	if (mname == "misdm12")
		return "misdm12";
	if (mname == "misdm13")
		return "misdm13";
	if (mname == "misdm6")
		return "misdm6";
	if (mname == "misdm8")
		return "misdm8";
	if (mname == "misdm9")
		return "misdm9";
	if (mname == "mjdm1pro")
		return "mjdm1pro";
	if (mname == "muny16")
		return "muny16";
	if (mname == "naked3")
		return "naked3";
	if (mname == "naked4")
		return "naked4";
	if (mname == "naked5")
		return "naked5";
	if (mname == "naked6")
		return "naked6";
	if (mname == "naked7b2")
		return "naked7b2";
	if (mname == "nduel")
		return "nduel";
	if (mname == "nindm2")
		return "nindm2";
	if (mname == "nindm3")
		return "nindm3";
	if (mname == "nindm3v2")
		return "nindm3v2";
	if (mname == "njx9dm")
		return "njx9dm";
	if (mname == "noentry")
		return "noentry";
	if (mname == "odd1")
		return "odd1";
	if (mname == "odd2")
		return "odd2";
	if (mname == "oktest1")
		return "oktest1";
	if (mname == "oldcrat")
		return "oldcrat";
	if (mname == "oldcrat2")
		return "oldcrat2";
	if (mname == "oma")
		return "oma";
	if (mname == "omf")
		return "omf";
	if (mname == "opposit")
		return "opposit";
	if (mname == "outpost")
		return "outpost";
	if (mname == "p3a")
		return "p3a";
	if (mname == "pbrdm2")
		return "pbrdm2";
	if (mname == "pen2")
		return "pen2";
	if (mname == "pidmm5")
		return "pidmm5";
	if (mname == "pinion1")
		return "pinion1";
	if (mname == "pinion2")
		return "pinion2";
	if (mname == "pinion3")
		return "pinion3";
	if (mname == "pipeline")
		return "pipeline";
	if (mname == "pkeg1")
		return "pkeg1";
	if (mname == "pkeg2")
		return "pkeg2";
	if (mname == "pldm1ex")
		return "pldm1ex";
	if (mname == "pli")
		return "pli";
	if (mname == "plpak1")
		return "plpak1";
	if (mname == "plpak10")
		return "plpak10";
	if (mname == "plpak11")
		return "plpak11";
	if (mname == "plpak12")
		return "plpak12";
	if (mname == "plpak2")
		return "plpak2";
	if (mname == "plpak3")
		return "plpak3";
	if (mname == "plpak4")
		return "plpak4";
	if (mname == "plpak5")
		return "plpak5";
	if (mname == "plpak6")
		return "plpak6";
	if (mname == "plpak7")
		return "plpak7";
	if (mname == "plpak8")
		return "plpak8";
	if (mname == "plpak9")
		return "plpak9";
	if (mname == "pope2")
		return "pope2";
	if (mname == "pope3")
		return "pope3";
	if (mname == "pope4")
		return "pope4";
	if (mname == "pope6")
		return "pope6";
	if (mname == "povdmm4")
		return "povdmm4";
	if (mname == "primedm")
		return "primedm";
	if (mname == "prodm4")
		return "prodm4";
	if (mname == "pushdmm4")
		return "pushdmm4";
	if (mname == "q1_q2dm1")
		return "q1_q2dm1";
	if (mname == "q1arena")
		return "q1arena";
	if (mname == "q1arenax")
		return "q1arenax";
	if (mname == "q1base1")
		return "q1base1";
	if (mname == "q1edge")
		return "q1edge";
	if (mname == "q1tm_speedy")
		return "q1tm_speedy";
	if (mname == "q2dm7")
		return "q2dm7";
	if (mname == "q3dm6qw")
		return "q3dm6qw";
	if (mname == "qffldm5")
		return "qffldm5";
	if (mname == "qtdm1")
		return "qtdm1";
	if (mname == "qtourney2")
		return "qtourney2";
	if (mname == "quadrock")
		return "quadrock";
	if (mname == "ranbase")
		return "ranbase";
	if (mname == "rapture1")
		return "rapture1";
	if (mname == "rapture2")
		return "rapture2";
	if (mname == "rarena3")
		return "rarena3";
	if (mname == "ravage")
		return "ravage";
	if (mname == "ravage2")
		return "ravage2";
	if (mname == "razzi")
		return "razzi";
	if (mname == "rev68")
		return "rev68";
	if (mname == "rf2")
		return "rf2";
	if (mname == "rgarden")
		return "rgarden";
	if (mname == "rip")
		return "rip";
	if (mname == "ritual")
		return "ritual";
	if (mname == "rpdm10")
		return "rpdm10";
	if (mname == "rpgdm1")
		return "rpgdm1";
	if (mname == "rtldm3")
		return "rtldm3";
	if (mname == "ruins")
		return "ruins";
	if (mname == "rwild")
		return "rwild";
	if (mname == "safe1")
		return "safe1";
	if (mname == "safe2")
		return "safe2";
	if (mname == "sanity")
		return "sanity";
	if (mname == "santzue")
		return "santzue";
	if (mname == "scampdm5")
		return "scampdm5";
	if (mname == "schloss")
		return "schloss";
	if (mname == "shadows")
		return "shadows";
	if (mname == "shadowsb7")
		return "shadowsb7";
	if (mname == "shady")
		return "shady";
	if (mname == "shake")
		return "shake";
	if (mname == "shine")
		return "shine";
	if (mname == "shroud")
		return "shroud";
	if (mname == "shroud2")
		return "shroud2";
	if (mname == "silence")
		return "silence";
	if (mname == "skull")
		return "skull";
	if (mname == "skywalk")
		return "skywalk";
	if (mname == "slip")
		return "slip";
	if (mname == "sm")
		return "sm";
	if (mname == "sm30_ray")
		return "sm30_ray";
	if (mname == "spank1")
		return "spank1";
	if (mname == "spd")
		return "spd";
	if (mname == "spear")
		return "spear";
	if (mname == "spine")
		return "spine";
	if (mname == "spinev2")
		return "spinev2";
	if (mname == "start")
		return "start";
	if (mname == "strafin1")
		return "strafin1";
	if (mname == "strafin2")
		return "strafin2";
	if (mname == "strafin3")
		return "strafin3";
	if (mname == "strafin4")
		return "strafin4";
	if (mname == "strafin5")
		return "strafin5";
	if (mname == "strafin6")
		return "strafin6";
	if (mname == "strmland")
		return "strmland";
	if (mname == "sudden")
		return "sudden";
	if (mname == "summer")
		return "summer";
	if (mname == "swtdie")
		return "swtdie";
	if (mname == "tbase")
		return "tbase";
	if (mname == "tearena")
		return "tearena";
	if (mname == "teritory")
		return "teritory";
	if (mname == "theend")
		return "theend";
	if (mname == "thf")
		return "thf";
	if (mname == "timeless")
		return "timeless";
	if (mname == "titan2")
		return "titan2";
	if (mname == "trallefinal")
		return "trallefinal";
	if (mname == "trdmm4")
		return "trdmm4";
	if (mname == "trindm1")
		return "trindm1";
	if (mname == "trindm2")
		return "trindm2";
	if (mname == "trindm3")
		return "trindm3";
	if (mname == "trondm1")
		return "trondm1";
	if (mname == "trondm2")
		return "trondm2";
	if (mname == "tsd")
		return "tsd";
	if (mname == "tumour2")
		return "tumour2";
	if (mname == "uarena1")
		return "uarena1";
	if (mname == "ukcldm2")
		return "ukcldm2";
	if (mname == "ukcldm6")
		return "ukcldm6";
	if (mname == "ukooldm2")
		return "ukooldm2";
	if (mname == "ukooldm3")
		return "ukooldm3";
	if (mname == "ukooldm4")
		return "ukooldm4";
	if (mname == "ukooldm6")
		return "ukooldm6";
	if (mname == "ukooldm8")
		return "ukooldm8";
	if (mname == "ukpak1")
		return "ukpak1";
	if (mname == "ukpak2")
		return "ukpak2";
	if (mname == "ukpak5")
		return "ukpak5";
	if (mname == "ukpak6")
		return "ukpak6";
	if (mname == "ukpak8")
		return "ukpak8";
	if (mname == "ultrav")
		return "ultrav";
	if (mname == "unddm1")
		return "unddm1";
	if (mname == "unddm2")
		return "unddm2";
	if (mname == "utressor")
		return "utressor";
	if (mname == "vdm2")
		return "vdm2";
	if (mname == "vdm3")
		return "vdm3";
	if (mname == "vendetta")
		return "vendetta";
	if (mname == "vision1")
		return "vision1";
	if (mname == "warfare")
		return "warfare";
	if (mname == "warfare2")
		return "warfare2";
	if (mname == "warfare3")
		return "warfare3";
	if (mname == "wildtest")
		return "wildtest";
	if (mname == "xl1dm1")
		return "xl1dm1";
	if (mname == "xl1dm2")
		return "xl1dm2";
	if (mname == "xl1dm3")
		return "xl1dm3";
	if (mname == "xl1dm4")
		return "xl1dm4";
	if (mname == "xl1dm5")
		return "xl1dm5";
	if (mname == "xl1dm6")
		return "xl1dm6";
	if (mname == "xl1dm7")
		return "xl1dm7";
	if (mname == "ztndm1")
		return "ztndm1";
	if (mname == "ztndm2")
		return "ztndm2";
	if (mname == "ztndm3")
		return "ztndm3";
	if (mname == "ztndm4")
		return "ztndm4";
	if (mname == "ztndm5")
		return "ztndm5";
	if (mname == "ztndm6")
		return "ztndm6";
	return "";
}
